madori-edit
    .mdl-grid
        div(class=`{ col4 }`)
            input.mdl-slider.mdl-js-slider(name='size', type='range', min=0.25, max=30, step=0.25, value=`{ opts.madori.width * opts.madori.height / opts.stage.unit / opts.stage.unit * 2 }`, oninput=`{ change }`)
            span { size.value } 畳
    .mdl-grid
        div(class=`{ col4 }`)
            .mdl-textfield.mdl-js-textfield
                select.mdl-textfield__input(name='type', value=`{ opts.madori.type }`, onchange=`{ change }`)
                    option.mdl-list__item(each=`{ type, i in opts.stage.types }`, value=`{ i }`) { type.name }
    .mdl-grid
        div(class=`{ col1 }`)
            a.mdl-button.mdl-js-button.mdl-button--icon.mdl-button--colored(onclick=`{ floorDown }`, if=`{ opts.madori.floor !== 1 }`)
                i.material-icons remove
        div(class=`{ col2 }`)
            span { opts.madori.floor } 階
        div(class=`{ col1 }`)
            a.mdl-button.mdl-js-button.mdl-button--icon.mdl-button--colored(onclick=`{ floorUp }`)
                i.material-icons add
    .mdl-grid
        div(class=`{ col2 }`)
            label.mdl-switch.mdl-js-switch.mdl-js-ripple-effect
                input.mdl-switch__input(name='top', type='checkbox', checked=`{ opts.madori.wall.indexOf('top') !== -1 }`, onchange=`{ change }`)
                span.mdl-switch__label 上
        div(class=`{ col2 }`)
            label.mdl-switch.mdl-js-switch.mdl-js-ripple-effect
                input.mdl-switch__input(name='bottom', type='checkbox', checked=`{ opts.madori.wall.indexOf('bottom') !== -1 }`, onchange=`{ change }`)
                span.mdl-switch__label 下
    .mdl-grid
        div(class=`{ col2 }`)
            label.mdl-switch.mdl-js-switch.mdl-js-ripple-effect
                input.mdl-switch__input(name='left', type='checkbox', checked=`{ opts.madori.wall.indexOf('left') !== -1 }`, onchange=`{ change }`)
                span.mdl-switch__label 左
        div(class=`{ col2 }`)
            label.mdl-switch.mdl-js-switch.mdl-js-ripple-effect
                input.mdl-switch__input(name='right', type='checkbox', checked=`{ opts.madori.wall.indexOf('right') !== -1 }`, onchange=`{ change }`)
                span.mdl-switch__label 右
    .mdl-grid(if=`{ top.checked || left.checked || right.checked || bottom.checked }`)
        div(class=`{ col3 }`)
            p ドアを追加
        div(class=`{ col1 }`)
            a.mdl-button.mdl-js-button.mdl-button--icon.mdl-button--colored(href='#madori/door/add')
                i.material-icons add
    .mdl-grid(each=`{ door, i in opts.madori.children }`, if=`{ door.name === 'door' }`)
        div(class=`{ col2 }`)
            p(if=`{ door.line === 'top' }`) 上 { door.start } 〜 { door.end }
            p(if=`{ door.line === 'left' }`) 左 { door.start } 〜 { door.end }
            p(if=`{ door.line === 'right' }`) 右 { door.start } 〜 { door.end }
            p(if=`{ door.line === 'bottom' }`) 下 { door.start } 〜 { door.end }
        div(class=`{ col1 }`)
            a.mdl-button.mdl-js-button.mdl-button--icon.mdl-button--colored(onclick=`{ removeDoor }`)
                i.material-icons delete
        div(class=`{ col1 }`)
            a.mdl-button.mdl-js-button.mdl-button--icon.mdl-button--colored(href=`{ '#madori/door/' + door.id }`)
                i.material-icons edit
    .mdl-grid
        div(class=`{ col1 }`)
            a.mdl-button.mdl-js-button.mdl-button--icon.mdl-button--colored(onclick=`{ remove }`)
                i.material-icons delete
        div(class=`{ col2 }`)
        div(class=`{ col1 }`)
            a.mdl-button.mdl-js-button.mdl-button--icon.mdl-button--colored(href='#madori')
                i.material-icons keyboard_return

    script.
        this.on('mount', () => {
            componentHandler.upgradeDom();
        });
        this.mixin('grid');

        this.floorDown  = () => (opts.madori.floor--);
        this.floorUp    = () => (opts.madori.floor++);
        this.change     = () => {
            opts.stage.types[opts.madori.type].counter--;
            opts.madori.setMadoriProps({
                width:  parseFloat(this.size.value) * opts.stage.unit * opts.stage.unit / opts.madori.height / 2,
                wall:   ['top', 'left', 'right', 'bottom'].filter((key) => (this[key].checked)),
                type:   parseInt(this.type.value),
            });
            opts.stage.types[opts.madori.type].counter++;
        };
        this.remove     = () => {
            opts.stage.types[opts.madori.type].counter--;
            opts.stage.removeChild(opts.madori)
            riot.route('/madori');
        };
        this.removeDoor = (e) => {
            opts.madori.removeChild(e.item.door);
        };
